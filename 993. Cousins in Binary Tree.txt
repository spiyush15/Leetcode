/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int depthx;
    TreeNode parentx;
    public boolean isCousins(TreeNode root, int x, int y) {
        
        findDepth(root,x,0,null);
        int depth1 = depthx;
        TreeNode parent1 = parentx;
        findDepth(root,y,0,null);
        int depth2 = depthx;
        TreeNode parent2 = parentx;
        if(depth1==depth2 && parent1!=parent2)
            return true;
        return false;
    }
    
    public void findDepth(TreeNode root, int i, int depth,TreeNode parent){
        if(root.val==i){
             depthx=depth;
            parentx = parent;
            return;
        }
        if(root.left!=null)
            findDepth(root.left,i,depth+1,root);
        if(root.right!=null)
            findDepth(root.right,i,depth+1,root);
        
    }
}